version: '3.8'
services:

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "bash", "-c", "echo 'ruok' | nc localhost 2181"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - matchmaking-network
      
  kafka:
    image: confluentinc/cp-kafka:7.4.4
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "false"
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_OPTS: -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Djava.rmi.server.hostname=kafka -Dcom.sun.management.jmxremote.rmi.port=9101
    depends_on:
      zookeeper:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "kafka-topics", "--list", "--bootstrap-server", "localhost:9092"]
      interval: 20s
      timeout: 10s
      retries: 5
    networks:
      - matchmaking-network
    volumes:
      - kafka-data:/var/lib/kafka/data

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - matchmaking-network
    volumes:
      - redis-data:/data

  matchmaking-service:
    image: matchmaking-service:latest
    build:
      context: ./MatchMaking.Service
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    environment:
      - Kafka__BootstrapServers=kafka:9092
      - Redis__ConnectionString=redis:6379
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - matchmaking-network

  matchmaking-worker1:
    image: matchmaking-worker:latest
    build:
      context: ./MatchMaking.Worker
      dockerfile: Dockerfile
    container_name: matchmaking-worker-1
    environment:
      - Kafka__BootstrapServers=kafka:9092
      - Redis__ConnectionString=redis:6379
      - MatchMaking__UsersPerMatch=3
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - matchmaking-network

  matchmaking-worker2:
    image: matchmaking-worker:latest
    build:
      context: ./MatchMaking.Worker
      dockerfile: Dockerfile
    container_name: matchmaking-worker-2
    environment:
      - Kafka__BootstrapServers=kafka:9092
      - Redis__ConnectionString=redis:6379
      - MatchMaking__UsersPerMatch=3
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - matchmaking-network

volumes:
  zookeeper-data:
  kafka-data:
  redis-data:

networks:
  matchmaking-network:
    driver: bridge